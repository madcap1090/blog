<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bad to the code</title>
    <link>/</link>
    <description>Recent content on bad to the code</description>
    <generator>Hugo - gohugo.io</generator>
    <language>en</language>
    <contact>madcap1090@gmail.com</contact>
    <copyright>&copy; <a href="https://github.com/madcap1090">William Bourgeois</a> 2019</copyright>
    
        <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Am I getting slower going to work?</title>
      <link>/post/am-i-getting-slower-going-to-work/</link>
      <pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate>
      <author>William Bourgeois</author>
      <guid>/post/am-i-getting-slower-going-to-work/</guid>
      <description></description>
      
      <content>


&lt;p&gt;I got a bit distracted writing the last post. What I want to find out is, based on my Google location history, how fast I bike to work and if this has changed over time.&lt;/p&gt;
&lt;p&gt;Attaching libraries&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;tidyverse&amp;quot;)
library(&amp;quot;lubridate&amp;quot;)
library(&amp;quot;glue&amp;quot;)
library(&amp;quot;purrr&amp;quot;)
library(&amp;quot;ggmap&amp;quot;)
library(&amp;quot;ggplot2&amp;quot;); theme_set(theme_minimal())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And loading the data&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# the code to convert your location data to a data frame:
# see last post too
# data &amp;lt;- fromJSON(&amp;quot;./data/Location History.json&amp;quot;) # extracts a list
# locations &amp;lt;- data$locations # and the list contains a dataframe

location &amp;lt;- readRDS(&amp;quot;~/R/blog/content/post/data/location.rds&amp;quot;)

df &amp;lt;- location %&amp;gt;% 
  mutate(datetime = as.POSIXct(as.numeric(timestampMs)/1000, origin = &amp;quot;1970-01-01&amp;quot;)) 

df &amp;lt;- df %&amp;gt;% 
  mutate(lat   = latitudeE7/1e7,
         lon   = longitudeE7/1e7,
         time  = strftime(datetime, format = &amp;quot;%H:%M:%S&amp;quot;),
         date  = date(datetime),
         year  = year(datetime),
         month = month(datetime),
         wday  = wday(datetime))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So what do we have here?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nrow(df)                   # rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 522770&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;length(unique(df$date))    # days&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1249&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(unique(df$date))       # first day&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2014-01-14&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;max(unique(df$date))       # last day&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2018-10-15&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Plotted:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = df, aes(x = datetime, y = lat))+
 geom_line()+
  labs(title=&amp;quot;commuting slower?&amp;quot;,
       subtitle = &amp;quot;latitude tracking 2014 - 2018&amp;quot;,
       x = &amp;quot;days&amp;quot;,
       y = &amp;quot;latitude&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-13-am-i-getting-slower-going-to-work_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I changed jobs in September 2014, my first working day at my current job was 15/09/2014.&lt;/p&gt;
&lt;p&gt;Let‚Äôs see which days I was working there. The dataframe ‚Äúwork‚Äù, then contains all the data points from where I am at work.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;work &amp;lt;- df %&amp;gt;% 
  filter(date &amp;gt; &amp;quot;2014-09-14&amp;quot;) %&amp;gt;%
  filter(round(lat,3) == 50.557) %&amp;gt;% 
  filter(round(lon,2) == 5.18) %&amp;gt;% # a little less accuracy on the longitude
  mutate(homework = &amp;quot;work&amp;quot;) %&amp;gt;% 
  mutate(am_pm = case_when(am(datetime) ~ &amp;quot;am&amp;quot;,
                           TRUE ~ &amp;quot;pm&amp;quot;))

length(unique(work$date)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 406&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = work, aes(x = datetime, y = lat))+
  geom_line() +
  theme(axis.title.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank())+
  labs(y = &amp;quot;latitude&amp;quot;, 
    title = &amp;quot;lattitude between home and work by day&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-13-am-i-getting-slower-going-to-work_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;So that would mean that in my data set I have 406 working days and the data that comes along with it.
Since at this point I am not interested in the data from days I was not working, these can be filtered out.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;home &amp;lt;- df %&amp;gt;%
  filter(round(lat,3) != 50.557) %&amp;gt;% 
  filter(round(lon,2) != 5.18) %&amp;gt;%
  mutate(homework = &amp;quot;not_work&amp;quot;) %&amp;gt;% 
  filter(date %in%(unique(work$date))) %&amp;gt;% 
  mutate(am_pm = case_when(am(datetime) ~ &amp;quot;am&amp;quot;,
                           TRUE ~ &amp;quot;pm&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check if the dates are the same&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;setdiff(unique(home$date),unique(work$date))  &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## numeric(0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nice. The dates are equal. The home and work date frames can be binded.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;home_work &amp;lt;- rbind(home, work) %&amp;gt;% 
  arrange(datetime)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What days at work got tracked?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;length(unique(home_work$date)) # workdays&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 406&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(unique(home_work$date))    # first day&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2014-09-15&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;max(unique(home_work$date))    # last day&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2018-07-03&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Why is the latest day not in October 2018. Why does the series stop in July?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;day &amp;lt;- df %&amp;gt;% 
  filter(date &amp;gt; &amp;quot;2018-07-01&amp;quot;) 

ggplot(data = day, aes(x = datetime, y = lat))+
  geom_line() +
  theme(axis.title.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank())+
  labs(y = &amp;quot;latitude&amp;quot;, 
    title = &amp;quot;July to October 2018&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-13-am-i-getting-slower-going-to-work_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The date in October is just isolated. So there is less useful data in the dataset then I originally thought.&lt;/p&gt;
&lt;p&gt;To calculate the time of my daily commute I have to find the time between I last was at home and the time I arrived at work.&lt;/p&gt;
&lt;p&gt;The latitude changes during a typical working day look like this (although this one is particularly boring üòí).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;day &amp;lt;- df %&amp;gt;% 
  filter(date == &amp;quot;2014-12-23&amp;quot;) 

ggplot(data = day, aes(x = datetime, y = lat)) +
  geom_line() +
  theme(axis.title.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) +
  labs(y = &amp;quot;latitude&amp;quot;, 
    title = &amp;quot;23/12/2014 - another day at the office&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-13-am-i-getting-slower-going-to-work_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And if we look at the first hours of the day and arriving at work:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;day &amp;lt;- df %&amp;gt;% 
  filter(date == &amp;quot;2014-12-23&amp;quot;) %&amp;gt;% 
  filter(time &amp;gt; &amp;quot;07:00:00&amp;quot;,
         time &amp;lt; &amp;quot;09:30:00&amp;quot;)

ggplot(data = day, aes(x = datetime, y = lat)) +
  geom_line() +
  theme(axis.title.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) +
  labs(y = &amp;quot;Latitude&amp;quot;, 
    title = &amp;quot;23/12/2014 - zooming in on arriving at work&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-13-am-i-getting-slower-going-to-work_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;So the time spent in the commute is the time first at around 50.560 latitude (itw) minus the last time at around 50.580 latitude (oth), and that for the time period of let‚Äôs say between 7am and 9.30am.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;oth &amp;lt;- day %&amp;gt;% 
  filter(lat &amp;lt; 50.5756) %&amp;gt;% 
  filter(time == min(time)) %&amp;gt;% 
  select(time) %&amp;gt;% 
  mutate(time = as.POSIXct(time, format = &amp;quot;%H:%M:%S&amp;quot;))

itw &amp;lt;- day %&amp;gt;% 
  filter(lat &amp;lt; 50.558) %&amp;gt;% 
  filter(time == min(time)) %&amp;gt;% 
  select(time)%&amp;gt;% 
  mutate(time = as.POSIXct(time, format = &amp;quot;%H:%M:%S&amp;quot;))

commute_time &amp;lt;- difftime(itw$time,oth$time, units = c(&amp;quot;mins&amp;quot;)) #9.93 minutes
class(commute_time)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;difftime&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;as.numeric(commute_time)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.083333&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2 minutes is a bit too fast. The problem is that the first time out of the house, on that particular date, is recorded pretty late. So the last time in the house (ith) is the one that is needed. Also because starting around 30/01/2016 a strange pattern is emerging&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;day &amp;lt;- home_work %&amp;gt;%
  filter(date == &amp;quot;2018-07-03&amp;quot;) %&amp;gt;% 
  filter(time &amp;gt; &amp;quot;08:00:00&amp;quot;,
         time &amp;lt; &amp;quot;09:30:00&amp;quot;)

ggplot(data = day, aes(x = datetime, y = lat)) +
  geom_line() +
  theme(axis.title.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) +
  labs(y = &amp;quot;latitude&amp;quot;, 
    title = &amp;quot;&amp;#39;bilocation&amp;#39; pattern&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-13-am-i-getting-slower-going-to-work_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And that pattern did not happen before February 2016. For instance ‚Äú2016-01-08‚Äù gives.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;day &amp;lt;- home_work %&amp;gt;%
  filter(date == &amp;quot;2016-01-08&amp;quot;) %&amp;gt;% 
  filter(time &amp;gt; &amp;quot;07:30:00&amp;quot;,
         time &amp;lt; &amp;quot;09:30:00&amp;quot;)

ggplot(data = day, aes(x = datetime, y = lat)) +
  geom_line()+
  theme(axis.title.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) +
  labs(y = &amp;quot;latitude&amp;quot;, 
    title = &amp;quot;before February 2016&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-13-am-i-getting-slower-going-to-work_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A collegue came up with the hypothesis that it was my computer at home that was messing up my phone location data, which was a great idea, but in fact it was my tablet.&lt;/p&gt;
&lt;p&gt;I bought it on 30/01/2016, and both it‚Äôs location data and my phone location data are merged ever since. Which is kind of surprising or rather dissapointing.&lt;/p&gt;
&lt;p&gt;Google is serving us dirty data in the location history. I cannot imagine it does not distinguish between my devises.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;files/20190413/stu.png&#34; alt=&#34;optional caption text&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;optional caption text&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;files/20190413/stu.png&#34; alt=&#34;optional caption text&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;optional caption text&lt;/p&gt;
&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;oth &amp;lt;- day %&amp;gt;% 
  filter(lat &amp;lt; 50.5756) %&amp;gt;% 
  filter(time == min(time)) %&amp;gt;% 
  select(time) %&amp;gt;% 
  mutate(time = as.POSIXct(time, format = &amp;quot;%H:%M:%S&amp;quot;))

# the last time in the house
ith &amp;lt;- day %&amp;gt;% 
  mutate(time = as.POSIXct(time, format = &amp;quot;%H:%M:%S&amp;quot;)) %&amp;gt;% 
  filter(time &amp;lt; oth$time) %&amp;gt;% 
  filter(time == max(time))%&amp;gt;% 
  select(time) %&amp;gt;% 
  mutate(time = as.POSIXct(time, format = &amp;quot;%H:%M:%S&amp;quot;))


itw &amp;lt;- day %&amp;gt;% 
  filter(lat &amp;lt; 50.557) %&amp;gt;% 
  filter(time == min(time)) %&amp;gt;% 
  select(time)%&amp;gt;% 
  mutate(time = as.POSIXct(time, format = &amp;quot;%H:%M:%S&amp;quot;))

commute_time &amp;lt;- difftime(itw$time,ith$time, units = c(&amp;quot;mins&amp;quot;)) #9.93 minutes
class(commute_time)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;difftime&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;as.numeric(commute_time)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 44.48333&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;17 minutes on the other hand seems a lot. But the data and calculations look correct to me. One explanation could be that sometimes there is a big delay in reporting the arrival time. Like on April 17 2015, where arrival was recorded after 12am.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;day &amp;lt;- df %&amp;gt;% 
  filter(date == &amp;quot;2015-04-17&amp;quot;) 

ggplot(data = day, aes(x = datetime, y = lat)) +
  geom_line()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-13-am-i-getting-slower-going-to-work_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;So it‚Äôs time to do some more data cleaning, and select dates that have data from both work and home between 7 and 9:30am.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;keep_dates &amp;lt;- home_work %&amp;gt;% 
  filter(time &amp;gt; &amp;quot;07:00:00&amp;quot;,
         time &amp;lt; &amp;quot;09:30:00&amp;quot;) %&amp;gt;%
  plyr::count(c(&amp;#39;date&amp;#39;, &amp;#39;homework&amp;#39;)) %&amp;gt;% 
  spread(homework, freq) %&amp;gt;% 
  filter(work &amp;gt; 0) %&amp;gt;% 
  select(date)
glue(&amp;quot;so there are now {nrow(keep_dates)} days to be analysed&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## so there are now 336 days to be analysed&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let‚Äôs define a function to do it.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# building the function
get_time &amp;lt;- function(x_date){
  day &amp;lt;- home_work %&amp;gt;%
    filter(date ==  x_date) %&amp;gt;% 
    filter(time &amp;gt; &amp;quot;07:30:00&amp;quot;,
           time &amp;lt; &amp;quot;09:30:00&amp;quot;)
  oth &amp;lt;- day %&amp;gt;% 
    filter(lat &amp;lt; 50.5756) %&amp;gt;% 
    filter(time == min(time)) %&amp;gt;% 
    select(time) %&amp;gt;% 
    mutate(time = as.POSIXct(time, format = &amp;quot;%H:%M:%S&amp;quot;)) %&amp;gt;% 
    slice(1) # making sure one value is returned
  
  ith &amp;lt;- day %&amp;gt;% 
    mutate(time = as.POSIXct(time, format = &amp;quot;%H:%M:%S&amp;quot;)) %&amp;gt;% 
    filter(time &amp;lt; oth$time) %&amp;gt;% 
    filter(time == max(time))%&amp;gt;% 
    select(time) %&amp;gt;% 
    mutate(time = as.POSIXct(time, format = &amp;quot;%H:%M:%S&amp;quot;))
  
  if(nrow(ith) == 0) {ith &amp;lt;- oth} 
  
  itw &amp;lt;- day %&amp;gt;% 
    filter(lat &amp;lt; 50.558) %&amp;gt;% 
    filter(time == min(time)) %&amp;gt;% 
    select(time)%&amp;gt;% 
    mutate(time = as.POSIXct(time, format = &amp;quot;%H:%M:%S&amp;quot;))%&amp;gt;% 
    slice(1) # making sure one value is returned
  
  x &amp;lt;- difftime(itw$time,ith$time, units = c(&amp;quot;mins&amp;quot;))
  x &amp;lt;- round(as.numeric(x),2)
  return(x)
  
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I had a struggle with purrr‚Äôs map_df() , but map_dbl() also does the trick&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;result &amp;lt;- map_dbl(keep_dates$date, get_time) %&amp;gt;% 
  as.data.frame() %&amp;gt;% 
  rename(&amp;quot;minutes&amp;quot; = &amp;quot;.&amp;quot;) %&amp;gt;% 
  cbind(keep_dates) %&amp;gt;% 
  select(date, minutes)

head(result)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         date minutes
## 1 2014-09-16   18.53
## 2 2014-09-18   10.45
## 3 2014-09-24   28.02
## 4 2014-09-26   32.77
## 5 2014-09-30    9.30
## 6 2014-10-01   20.92&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;max(result$minutes)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 100.95&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(result$minutes)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.13&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(result, aes(x = date, y = minutes)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;)+ 
  scale_y_continuous(limits = c(0, 65))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-13-am-i-getting-slower-going-to-work_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2018 seems to have the cleanest data at this point. I sometimes walk to work or take the bus or the car. All of these take me more time than biking to work. There are five trafic lights on the way and I tend to stop for trafic lights when they are red. So the trafic ligths might explain much of the variance.&lt;/p&gt;
&lt;p&gt;I bike ride would not take more than twenty minutes, and surely not less than 5.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;r_2018 &amp;lt;- result %&amp;gt;% 
  filter(year(date) == 2018) %&amp;gt;% 
  filter(minutes &amp;lt; 20,
         minutes &amp;gt; 5)

ggplot(r_2018, aes(x = date, y = minutes)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-13-am-i-getting-slower-going-to-work_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;round(mean(r_2018$minutes),2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 12.18&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So that would then be around 12 minutes. I still need to time my current commutes for a while to see if I got slower.&lt;/p&gt;
&lt;p&gt;I hoped for a bit cleaner data and the possibility to easyly compare the evolution of the time spent commuting over several years. But it‚Äôll take the 12.18 minutes for now.&lt;/p&gt;
&lt;p&gt;Finally I wanted to share the ‚Äúpat√©s‚Äù with you. Not often enough part of the team takes a break and walks around the office block, and those we call doing a ‚Äúpat√©‚Äù (= block). They say walking meetings are in these days.&lt;/p&gt;
&lt;p&gt;I was looking to see how many of them we are doing, but as you will see below the datapoints are mostly centered on the building itself.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;zoom &amp;lt;- get_map(location = c(lon = 4.306, lat = 50.8545), zoom = 19, maptype = &amp;quot;satellite&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Source : https://maps.googleapis.com/maps/api/staticmap?center=50.8545,4.306&amp;amp;zoom=19&amp;amp;size=640x640&amp;amp;scale=2&amp;amp;maptype=satellite&amp;amp;language=en-EN&amp;amp;key=xxx&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- readRDS(&amp;quot;~/R/blog/content/post/data/location_509.rds&amp;quot;) %&amp;gt;% 
  filter(year != 2017)

ggmap(zoom) + 
  geom_point(data = df, aes(x = lon, y = lat),
             alpha = 0.7, color = &amp;quot;#FC4E07&amp;quot;, size = .8) + 
  facet_wrap(~year) +
  theme(legend.position = &amp;quot;right&amp;quot;) +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) +
  labs(
    x = &amp;quot;Longitude&amp;quot;, 
    y = &amp;quot;Latitude&amp;quot;, 
    title = &amp;quot;always happy @work&amp;quot;,
    caption = &amp;quot;\n removed 2017 because there were few data points.&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-13-am-i-getting-slower-going-to-work_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It seems to me all the data is a bit off. 2014 to 2016 a bit or a lot shifted to the left, and 2018 just a tad too much to the left.&lt;/p&gt;
</content>
      
    </item>
    
    <item>
      <title>google location tracking</title>
      <link>/post/google-location-tracking/</link>
      <pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate>
      <author>William Bourgeois</author>
      <guid>/post/google-location-tracking/</guid>
      <description></description>
      
      <content>


&lt;p&gt;Biking to work this week I was wondering if I had not gotten slower and if my commute was not taking longer than before. Not being a regular user of Strava or a similar app, I wondered if I could find an answer to that question using my Google location history.&lt;/p&gt;
&lt;p&gt;So I downloaded the data, that comes in json format, and had a go at it. You can &lt;a href=&#34;https://takeout.google.com/settings/takeout&#34;&gt;download&lt;/a&gt; your Google location data from your Google account.&lt;/p&gt;
&lt;p&gt;Let‚Äôs load the data and attach the libraries that are needed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;jsonlite&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)
library(&amp;quot;lubridate&amp;quot;)
library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;ggmap&amp;quot;)      # devtools::install_github(&amp;quot;dkahle/ggmap&amp;quot;)
library(&amp;quot;glue&amp;quot;)
library(&amp;quot;emo&amp;quot;)        # devtools::install_github(&amp;quot;hadley/emo&amp;quot;)
library(&amp;quot;viridis&amp;quot;)    # install.packages(&amp;quot;viridis&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- fromJSON(&amp;quot;./data/Location History.json&amp;quot;) # extracts a list
locations &amp;lt;- data$locations # and the list contains a dataframe
rm(data)  # no need for this anymore&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This &lt;a href=&#34;https://shiring.github.io/maps/2016/12/30/Standortverlauf_post&#34;&gt;blogpost&lt;/a&gt; from Shirin Glander was super useful and I am shamelessly stealing some of her great ideas. The time stamp needs to be converted to be readable.
The field heading seems to be in degrees, is velocity in mph? And I don‚Äôt know where the altitude reading comes from (maybe not a pressure sensor but gps triangulation?, ground elevation?).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- locations %&amp;gt;% 
  mutate(datetime = as.POSIXct(as.numeric(timestampMs)/1000, origin = &amp;quot;1970-01-01&amp;quot;)) 

sort(unique(df$heading)) #naught to 360&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [1]   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
##  [18]  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33
##  [35]  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50
##  [52]  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67
##  [69]  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84
##  [86]  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101
## [103] 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118
## [120] 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135
## [137] 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152
## [154] 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169
## [171] 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186
## [188] 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
## [205] 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220
## [222] 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237
## [239] 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254
## [256] 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271
## [273] 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288
## [290] 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
## [307] 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322
## [324] 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339
## [341] 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356
## [358] 357 358 359&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Is the velocity in miles per hour ?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unique(df$velocity)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] NA  0  1  3  5 14 28  2  4  7  8 25 29 15 16 19 10  6  9 11 13 12 21
## [24] 24 20 17 26 27 30 23 22 18 31 33 32 34 35 36 82 83 77 74 67 37&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Does that mean that I ever broke the speed limit? We‚Äôre not supposed to drive faster than 120 km/h in Belgium üöì!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#paste(round(max(unique(df$velocity), na.rm = TRUE)*1.609344,0),&amp;quot;km!&amp;quot;); ji(&amp;quot;scream&amp;quot;)
fine &amp;lt;- paste(round(max(unique(df$velocity), na.rm = TRUE)*1.609344,0),&amp;quot;km!&amp;quot;)

glue(&amp;quot;{fine} üò± üò± üò±&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 134 km! üò± üò± üò±&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Could this information get me fined? Or will this type information be used in the future to determine guilt?
Are the police allowed to access this type of Google data to for instance find perps of hit &amp;amp; runs?&lt;/p&gt;
&lt;p&gt;The data frame also contains lists with times stamps and estimations of activity at that time stamp.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(df$activity[80])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## List of 1
##  $ :&amp;#39;data.frame&amp;#39;:    1 obs. of  2 variables:
##   ..$ timestampMs: chr &amp;quot;1395248054966&amp;quot;
##   ..$ activity   :List of 1
##   .. ..$ :&amp;#39;data.frame&amp;#39;:  5 obs. of  2 variables:
##   .. .. ..$ type      : chr [1:5] &amp;quot;ON_FOOT&amp;quot; &amp;quot;STILL&amp;quot; &amp;quot;IN_VEHICLE&amp;quot; &amp;quot;UNKNOWN&amp;quot; ...
##   .. .. ..$ confidence: int [1:5] 49 20 16 10 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So if I read this correctly this object is a list of one, containing a dataframe with another two objects, a timestamp and another list of one, that contains a dataframe with 5 observations and two variables: the type of activity and the probability calculated for it. So on timestamp ‚Äú1395248054966‚Äù (= 2014-03-19 17:54:14 CET) I had a 49% probability to be on foot.&lt;/p&gt;
&lt;p&gt;And then there is also a measure of altitude. Is it in feet or meters, and where do the negative numbers come from? Maybe these data points should be analysed a bit later.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(unique(df$altitude)) # ? what sensor does it use?&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  int [1:633] NA 27 41 38 42 60 16 57 63 49 ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(unique(df$altitude))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA&amp;#39;s 
## -1299.0   108.8   266.5   274.0   435.2  2983.0       1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let‚Äôs plot some data on maps.&lt;/p&gt;
&lt;p&gt;First some additional date prep.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- df %&amp;gt;% 
  mutate(lat   = latitudeE7/1e7,
         lon   = longitudeE7/1e7,
         time  = strftime(datetime, format = &amp;quot;%H:%M:%S&amp;quot;),
         date  = date(datetime),
         year  = year(datetime),
         month = month(datetime),
         wday  = wday(datetime))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Working with ggmap is pretty straightforward, but you need to obtain an api key from google and enable billing. More info &lt;a href=&#34;https://developers.google.com/maps/documentation/embed/get-api-key&#34;&gt;here&lt;/a&gt;. For obvious reasons you need to keep your key secret and safe, but additionally you can restrict the calls to your &lt;a href=&#34;https://console.developers.google.com/apis/credentials?project=grounded-block-178714&amp;amp;folder&amp;amp;organizationId&#34;&gt;IP&lt;/a&gt;. Will have a go at OSM in a future post, promised.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;secrets &amp;lt;- readRDS(&amp;quot;~/R/geo/secret/secrets.rds&amp;quot;)
key &amp;lt;- secrets$key[1]
register_google(key = key)

belgium &amp;lt;- get_map(location = &amp;#39;Belgium&amp;#39;, zoom = 8, maptype = &amp;quot;terrain-lines&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The map coverage is called the bounding box of the map and it is an attribute of the ggmap object.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bb &amp;lt;- attr(belgium, &amp;quot;bb&amp;quot;)
bb&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          ll.lat  ll.lon ur.lat   ur.lon
## bottom 49.37082 2.71487 51.607 6.230495&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- df %&amp;gt;% 
  filter(lat &amp;lt; 51.607 &amp;amp; lat &amp;gt; 49.37082,
         lon &amp;gt; 2.71487 &amp;amp; lon &amp;lt; 6.20495)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggmap(belgium, maptype = &amp;quot;terrain-lines&amp;quot;) + 
  geom_point(data = x, aes(x = lon, y = lat),
             alpha = 0.1, color = &amp;quot;#FC4E07&amp;quot;, size = .65) + 
  theme(legend.position = &amp;quot;right&amp;quot;) + 
  labs(
    x = &amp;quot;Longitude&amp;quot;, 
    y = &amp;quot;Latitude&amp;quot;, 
    title = &amp;quot;Location history data points in Belgium&amp;quot;,
    caption = &amp;quot;\nA simple point plot shows recorded positions.&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-03-30-google-location-tracking_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Orange lines are my movements. A rock festival to the east of Antwerp, some visits to the coast, to my home city Ghent, a marriage in the west, biking and text mining in Leuven, and hikes in the woods of the south. Looks about right. And yes, I live and work in Brussels.&lt;/p&gt;
&lt;p&gt;So let‚Äôs take a closer look at Brussels.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;brussels &amp;lt;- get_map(location = &amp;#39;Brussels&amp;#39;, zoom = 12, maptype = &amp;quot;terrain-lines&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bb &amp;lt;- attr(brussels, &amp;quot;bb&amp;quot;)
bb&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          ll.lat   ll.lon   ur.lat   ur.lon
## bottom 50.78082 4.242029 50.91955 4.461756&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# just keeping data from brussels

x &amp;lt;- df %&amp;gt;% 
  filter(lat &amp;lt; bb$ur.lat &amp;amp; lat &amp;gt; bb$ll.lat,
         lon &amp;gt; bb$ll.lon &amp;amp; lon &amp;lt; bb$ur.lon)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggmap(brussels) + 
  geom_point(data = x, aes(x = lon, y = lat),
             alpha = 0.5, color = &amp;quot;#FC4E07&amp;quot;, size = .65) + 
  theme(legend.position = &amp;quot;right&amp;quot;) + 
  labs(
    x = &amp;quot;Longitude&amp;quot;, 
    y = &amp;quot;Latitude&amp;quot;, 
    title = &amp;quot;Location history data points in Brussels&amp;quot;,
    caption = &amp;quot;\nA simple point plot shows recorded positions.&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-03-30-google-location-tracking_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let‚Äôs see to how we can zoom in.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;zoom &amp;lt;- get_map(location = c(lon = 4.349078, lat = 50.850586), zoom = 16, maptype = &amp;quot;satellite&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bb &amp;lt;- attr(zoom, &amp;quot;bb&amp;quot;)
x &amp;lt;- df %&amp;gt;% 
  filter(lat &amp;lt; bb$ur.lat &amp;amp; lat &amp;gt; bb$ll.lat,
         lon &amp;gt; bb$ll.lon &amp;amp; lon &amp;lt; bb$ur.lon)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggmap(zoom) + 
 geom_point(data = x, aes(x = lon, y = lat),
             alpha = 0.7, color = &amp;quot;#FC4E07&amp;quot;, size = .85) + 
  theme(legend.position = &amp;quot;right&amp;quot;) + 
  labs(
    x = &amp;quot;Longitude&amp;quot;, 
    y = &amp;quot;Latitude&amp;quot;, 
    title = &amp;quot;Location history data points in central Brussels&amp;quot;,
    caption = &amp;quot;\n favorite haunts.&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-03-30-google-location-tracking_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;864&#34; /&gt;&lt;/p&gt;
&lt;p&gt;So that is pretty consistent with my favorite downtown haunts. Let‚Äôs pan out and add the number of seconds from 6 am in the day to the dataframe.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;period_to_seconds(hms(&amp;quot;06:00:00&amp;quot;)) # seconds at 6am&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 21600&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;period_to_seconds(hms(&amp;quot;23:59:59&amp;quot;)) # seconds just before midnight&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 86399&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- df %&amp;gt;% 
  mutate(from_dawn = 
           case_when((period_to_seconds(hms(time)) &amp;gt; 21600) ~ 
                       (period_to_seconds(hms(time))-21600),
                     TRUE ~ (period_to_seconds(hms(time))+64799)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So now there is a value (from_dawn) that is equal to 0 at six am and continues to increase until just before six. Easy to convert to hours starting from six am. Values seem higher in the center of the city. ‚ÄúIt‚Äôs six o‚Äôclock in the morning, do you know where your parents are?‚Äù üåî&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;options(stringsAsFactors = T)

bb &amp;lt;- attr(brussels, &amp;quot;bb&amp;quot;)
x &amp;lt;- df %&amp;gt;% 
  filter(lat &amp;lt; bb$ur.lat &amp;amp; lat &amp;gt; bb$ll.lat,
         lon &amp;gt; bb$ll.lon &amp;amp; lon &amp;lt; bb$ur.lon) %&amp;gt;% 
  mutate(hours = from_dawn/3600)

ggmap(brussels) + 
  stat_summary_2d(geom = &amp;quot;tile&amp;quot;, bins = 100, data = x, 
                  aes(x = lon, y = lat, z = hours), alpha = 0.7) + 
  scale_fill_gradientn(colors  =  viridis(4), 
                       guide = guide_legend(title = &amp;quot;hours since 6am&amp;quot;)) +
  labs(
    x = &amp;quot;Longitude&amp;quot;, 
    y = &amp;quot;Latitude&amp;quot;, 
    title = &amp;quot;Location history data points around Brussels&amp;quot;,
    subtitle = &amp;quot;Color scale shows accuracy (low: blue, high: red)&amp;quot;,
    caption = &amp;quot;\nThis bin plot shows recorded positions 
    and their time of day&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-03-30-google-location-tracking_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Looking at it by year.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bb &amp;lt;- attr(brussels, &amp;quot;bb&amp;quot;)
x &amp;lt;- df %&amp;gt;%
  filter(lat &amp;lt; bb$ur.lat &amp;amp; lat &amp;gt; bb$ll.lat,
         lon &amp;gt; bb$ll.lon &amp;amp; lon &amp;lt; bb$ur.lon,
         year &amp;gt; 2014)

ggmap(brussels) + facet_wrap(~year) +
geom_point(data = x, aes(x = lon, y = lat), alpha = 0.5, color = &amp;quot;#FC4E07&amp;quot;, size = .8) + 
  theme(legend.position = &amp;quot;right&amp;quot;) + 
  labs(
    x = &amp;quot;Longitude&amp;quot;, 
    y = &amp;quot;Latitude&amp;quot;, 
    title = &amp;quot;Location history data points in Brussels - by year &amp;quot;,
    caption = &amp;quot;\nA simple point plot shows recorded positions.&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-03-30-google-location-tracking_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It would seem that I moved a lot in 2016 compared to the other years, but to that extent it does not look right. Let‚Äôs dig a little deeper in the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = x, aes(x = datetime, y = lat))+
  geom_line()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-03-30-google-location-tracking_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;960&#34; /&gt;
So clearly 2015 and 2017 have much less data. In 2017 it looks like I only used location services to three or four specific places in Brussels, but it is intriguing that there seems to be data throughout the year. And this in contrast with the end of 2018 when I switched the location tracking off.&lt;/p&gt;
&lt;p&gt;Whether Google still keeps track of my whereabouts is of course another matter.&lt;/p&gt;
&lt;p&gt;I still don‚Äôt know if my commute has gotten longer. I will try to find out in a next blog post.&lt;/p&gt;
</content>
      
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      <author>William Bourgeois</author>
      <guid>/about/</guid>
      <description></description>
      
      <content>&lt;p&gt;This is a &amp;ldquo;hello world&amp;rdquo; example website for the &lt;a href=&#34;https://github.com/rstudio/blogdown&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;blogdown&lt;/strong&gt;&lt;/a&gt; package. The theme was forked from &lt;a href=&#34;https://github.com/jrutheiser/hugo-lithium-theme&#34; target=&#34;_blank&#34;&gt;@jrutheiser/hugo-lithium-theme&lt;/a&gt; and modified by &lt;a href=&#34;https://github.com/yihui/hugo-lithium&#34; target=&#34;_blank&#34;&gt;Yihui Xie&lt;/a&gt;.&lt;/p&gt;
</content>
      
    </item>
    
  </channel>
</rss>